<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdcplus.workflow.mapper.RequestMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xdcplus.workflow.common.pojo.entity.Request">
        <id column="id" property="id" />
        <result column="odd_number" property="oddNumber" />
        <result column="process_id" property="processId" />
        <result column="title" property="title" />
        <result column="status_id" property="statusId" />
        <result column="rule_id" property="ruleId" />
        <result column="config_version"  property="configVersion"/>
        <result column="created_user" property="createdUser" />
        <result column="updated_user" property="updatedUser" />
        <result column="created_time" property="createdTime" />
        <result column="updated_time" property="updatedTime" />
        <result column="description" property="description" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, odd_number, process_id, title, status_id, rule_id, config_version,
        created_user, updated_user, created_time, updated_time, description
    </sql>
    <select id="findRequestByTitle" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request as r
        where r.title = #{title,jdbcType=VARCHAR}
    </select>
    <select id="findRequest" resultMap="BaseResultMap">
         select
            <include refid="Base_Column_List"/>
        from xdc_t_request
        <where>
            <if test="title != null and title != ''">
                and title = #{title,jdbcType=VARCHAR}
            </if>
            <if test="processId != null">
                and process_id = #{processId,jdbcType=BIGINT}
            </if>
            <if test="oddNumber != null and oddNumber != ''">
                and odd_number like  CONCAT('%', #{oddNumber,jdbcType=VARCHAR}, '%')
            </if>
            <if test="ids != null and ids.size() != 0">
                and id in
                <foreach collection="ids" close=")" index="index" item="item" open="(" separator=",">
                    #{item,jdbcType=BIGINT}
                </foreach>
            </if>
            <if test="username != null and username != ''">
                created_user = #{username,jdbcType=VARCHAR}
            </if>
            <if test="keyword != null and keyword != ''">
                and (
                    odd_number like  CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR title like  CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR created_user like  CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
            <if test="statusId != null">
                status_id = #{statusId,jdbcType=BIGINT}
            </if>
        </where>
    </select>
    <select id="findRequestByIds" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request as r
        <where>
            <if test="ids != null and ids.size() != 0">
                r.id in
                <foreach collection="ids" separator="," open="(" item="item" index="index" close=")">
                    #{item,jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
    </select>
    <select id="findRequestByRuleId" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request
        where rule_id = #{ruleId,jdbcType=BIGINT}
    </select>
    <select id="findRequestByProcessId" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request
        where process_id = #{processId,jdbcType=BIGINT}
    </select>
    <update id="updateStatusIdById">
        update xdc_t_request set status_id = #{statusId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateProcessIdAndVersionById">
        update xdc_t_request
        set process_id = #{processId,jdbcType=BIGINT}, version = #{version,jdbcType=VARCHAR}
        where id = #{requestId,jdbcType=BIGINT}
    </update>
    <select id="findRequestByCreatedUser" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request
        where created_user = #{createdUser,jdbcType=VARCHAR}
    </select>
    <select id="handleMatters" resultMap="BaseResultMap">
        select
            <include refid="Base_Column_List"/>
        from xdc_t_request
        <where>
            <if test="processId != null">
                and process_id = #{processId,jdbcType=BIGINT}
            </if>
              <if test="statusId != null">
                and status_id = #{statusId,jdbcType=BIGINT}
            </if>
            <if test="statusId != null">
                and status_id = #{statusId,jdbcType=BIGINT}
            </if>
            <if test="startTime != null and endTime != null">
                and created_time between #{startTime,jdbcType=BIGINT} and #{endTime,jdbcType=BIGINT}
            </if>
            <if test="createdUser != null and createdUser != ''">
                and created_user = #{createdUser,jdbcType=VARCHAR}
            </if>
            <if test="requestIds != null and requestIds.size() != 0">
                and id in
                <foreach collection="requestIds" separator="," open="(" item="item" close=")" index="index">
                    #{item,jdbcType=BIGINT}
                </foreach>
            </if>
        </where>
    </select>
    <select id="countRequestByStatusId" resultType="java.lang.Integer">
        SELECT
            COUNT(req.id)
        FROM
            xdc_t_request as req
        WHERE
            req.status_id = #{statusId,jdbcType=BIGINT}
    </select>
    <select id="findRequestsByParentId" resultMap="BaseResultMap">
        SELECT
            request.*
        FROM
            xdc_t_request AS request
            LEFT JOIN xdc_t_request_relation AS relation ON request.id = relation.request_id
        WHERE
            relation.parent_id = #{parentId,jdbcType=BIGINT}
    </select>

</mapper>
